[{"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/index.js":"1","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/App.js":"2","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/reportWebVitals.js":"3","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Home/Home.js":"4","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/PostDetails/PostDetails.js":"5","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/NotMatch/NotMatch.js":"6","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Posts/Posts.js":"7","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Comments/Comments.js":"8"},{"size":500,"mtime":1607701412372,"results":"9","hashOfConfig":"10"},{"size":844,"mtime":1607704746350,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607701412372,"results":"12","hashOfConfig":"10"},{"size":479,"mtime":1607705281919,"results":"13","hashOfConfig":"10"},{"size":788,"mtime":1607707350404,"results":"14","hashOfConfig":"10"},{"size":200,"mtime":1607704360403,"results":"15","hashOfConfig":"10"},{"size":608,"mtime":1607705896795,"results":"16","hashOfConfig":"10"},{"size":1280,"mtime":1607711917764,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"46bdzw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/index.js",[],["38","39"],"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/App.js",["40"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./components/Home/Home\";\nimport NotMatch from \"./components/NotMatch/NotMatch\";\nimport PostDetails from \"./components/PostDetails/PostDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch>\n        <Route path=\"/home\">\n            <Home></Home>\n        </Route>\n        <Route path=\"/posts\">\n            <Home></Home>\n        </Route>\n        <Route path=\"/post/:PostId\">\n            <PostDetails></PostDetails>\n        </Route>\n        <Route exact path=\"/\">\n            <Home></Home>\n        </Route>\n        <Route path=\"*\">\n            <NotMatch></NotMatch>\n        </Route>\n      </Switch>\n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/reportWebVitals.js",[],"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Home/Home.js",[],"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/PostDetails/PostDetails.js",["41"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Comments from '../Comments/Comments';\n\nconst PostDetails = () => {\n    const {PostId} = useParams();\n    const [post, setPost] = useState([]);\n\n    useEffect(() => {\n       const url = `https://jsonplaceholder.typicode.com/posts/${PostId}`;\n       fetch(url)\n       .then(res => res.json())\n       .then(data => setPost(data))\n    },[])\n    return (\n        <div>\n            <h2> PostDetails of {PostId}</h2>\n            <h4>userId: {post.userId}</h4>\n            <h4>Post id: {post.id} </h4>\n            <h2>Post Title: {post.title}</h2>\n            <p>{post.body}</p>\n            <Comments id={PostId}></Comments>\n            \n        </div>\n    );\n};\n\nexport default PostDetails;","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/NotMatch/NotMatch.js",[],"/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Posts/Posts.js",["42"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Posts = (props) => {\n    console.log(props)\n    const {userId, id, title, body} = props.post;\n    const history = useHistory();\n\n    const handleShowMore = (PostId) => {\n        const url = `/post/${PostId}`;\n        history.push(url);\n\n    }\n    return (\n        <div style={{border: '1px solid maroon', margin: '5px', padding: '5px'}}>\n        \n           <h2>Title: {title}</h2>\n            <p>{body}</p>\n            <button onClick={()=>handleShowMore(id)}>Show more</button>\n        </div>\n    );\n};\n\nexport default Posts;","/home/sabbir/Desktop/Web Dev Projects/social-buddy/src/components/Comments/Comments.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":3,"nodeType":"49","messageId":"50","endLine":6,"endColumn":7},{"ruleId":"51","severity":1,"message":"52","line":14,"column":7,"nodeType":"53","endLine":14,"endColumn":9,"suggestions":"54"},{"ruleId":"47","severity":1,"message":"55","line":6,"column":12,"nodeType":"49","messageId":"50","endLine":6,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PostId'. Either include it or remove the dependency array.","ArrayExpression",["58"],"'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [PostId]",{"range":"61","text":"62"},[438,440],"[PostId]"]